countries <- sort(unique(projects$Country))
#152 countries
cps <- sort(unique(projects$Name))
#12,069 cps
insts <- sort(unique(projects$Institution))
#5377 institutions
#Check nationalities ============================================================
# Doing this because some projects have a region as a country
# Thus, I wanted to check if the variable Country could be used
#However, Not all the Nationalities match with the Country of the project
nationalities <- projects %>%
select(Nationality) %>%
distinct() %>%
filter(!is.na(Nationality),
!is.null(Nationality),
Nationality != 'NULL') %>%
left_join(country_codes)
#Drop observations with missing contact information ===========================
df_complete <- projects %>%
filter(!is.na(EMail),
!is.na(Institution),
Institution != "",
Nationality != "NULL")
#Institutions ==================================================================
#There's more than one institution by project,
#Thus, I will create a llong list of institutions so we can have the unique values
institutions_id <- df_complete %>%
#Select relevant variables
select(Index, ProjectNumber, FOADescription,Country,Area,Institution, Name, EMail, Nationality) %>%
#create a row by each institution of the project
separate(Institution,paste0("inst_",c(1:9)), ";") %>%
pivot_longer(-c(Index, Country,Area, Name, EMail,ProjectNumber, FOADescription, Nationality),
values_to = "Institution") %>%
select(-name) %>%
filter(!is.na(Institution)) %>%
#clean some institutions,
#this could take a long time. There are many cases of the same institution written
#differently
mutate(Institution = stringr::str_trim(Institution)) %>%
distinct() %>%
filter(!Institution %in% c('.', "", "•")) %>%
mutate(Institution = case_when(str_detect(Institution, "COMENA") ~ "Commissariat à l'énergie atomique (COMENA)",
str_detect(Institution, "AAEHC") ~ "Afghanistan Atomic Energy High Commission (AAEHC)",
str_detect(Institution, "AMARAP") ~ "Agence Malienne de Radioprotection (AMARAP)",
T ~ Institution))
head(institutions_id)
num_insts <- institutions_id %>%
group_by(Name) %>%
summarise(insts = length(unique(Institution)))
View(num_insts)
num_insts <- institutions_id %>%
group_by(Name) %>%
summarise(insts = length(unique(Institution))) %>%
ungroup()
tabyl(num_insts, insts)
sum(num_insts$insts)
nrow(num_insts)
num_insts <- institutions_id %>%
group_by(Name) %>%
summarise(insts = length(unique(Institution))) %>%
ungroup() %>%
mutate(more_1 = insts > 1)
tabyl(num_insts, more_1)
single_nat <- df_complete %>%
group_by(Name) %>%
summarise(nats = length(unique(Nationality)))  #NATIONALITIES ARE CONSISTENT!
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id()
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(cp_id =  row_number())
View(cps_ids)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id()
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste("00", row),
between(row, 10, 99) ~ paste("0", row),
T ~ as.character(row())
)
)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id()
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste("00", row),
between(row, 10, 99) ~ paste("0", row),
T ~ as.character(row)
)
)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id()
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste0("00", row),
between(row, 10, 99) ~ paste0("0", row),
T ~ as.character(row)
)
)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id(),
country_id = case_when(country_id < 10 ~ paste0("00", country_id),
between(country_id, 10, 99) ~ paste0("0", country_id),
T ~ as.character(country_id)
)
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste0("00", row),
between(row, 10, 99) ~ paste0("0", row),
T ~ as.character(row)
)
)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id(),
country_id = case_when(country_id < 10 ~ paste0("00", country_id),
between(country_id, 10, 99) ~ paste0("0", country_id),
T ~ as.character(country_id)
)
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste0("00", row),
between(row, 10, 99) ~ paste0("0", row),
T ~ as.character(row)
),
cp_id = paste0(country_id, cp)
)
get_dupes(cps_ids$cp_id)
get_dupes(cps_ids, cps_id)
get_dupes(cps_ids, cp_id)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id(),
country_id = case_when(country_id < 10 ~ paste0("00", country_id),
between(country_id, 10, 99) ~ paste0("0", country_id),
T ~ as.character(country_id)
)
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste0("00", row),
between(row, 10, 99) ~ paste0("0", row),
T ~ as.character(row)
),
cp_id = paste0(country_id, cp)
) %>%
ungroup()
get_dupes(cps_ids, cp_id)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id(),
country_id = case_when(country_id < 10 ~ paste0("00", country_id),
between(country_id, 10, 99) ~ paste0("0", country_id),
T ~ as.character(country_id)
)
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste0("00", row),
between(row, 10, 99) ~ paste0("0", row),
T ~ as.character(row)
),
cp_id = paste0(country_id, cp)
) %>%
ungroup() %>%
select(Name, country_id, cp_id)
export(cps_ids, "data/2.sample/cps_sample.csv")
rio::export(cps_ids, "data/2.sample/cps_sample.csv")
rio::export(cps_ids, "data/2.sample/cps_sample.csv")
export(institutions_id, 'data/1.reference/clean/institutions.csv')
library(rio)
library(dplyr)
library(tidyr)
library(janitor)
library(stringr)
projects <- import('data/reference/Copy of CPs_2022_09_12.xlsx')
create_df_complete <- function(.data){
.data %>%
filter(!is.na(EMail),
!is.na(Institution),
Institution != "",
Nationality != "NULL")
}
df_complete <- create_df_complete(projects)
projects <- import('data/reference/Copy of CPs_2022_09_12.xlsx')
projects <- import('data/1.reference/Copy of CPs_2022_09_12.xlsx')
create_df_complete <- function(.data){
.data %>%
filter(!is.na(EMail),
!is.na(Institution),
Institution != "",
Nationality != "NULL")
}
gmdacr::load_functions('functions')
projects <- import('data/1.reference/Copy of CPs_2022_09_12.xlsx')
institutions_id <- df_complete %>%
#Select relevant variables
select(Index, ProjectNumber, FOADescription,Country,Area,Institution, Name, EMail, Nationality) %>%
#create a row by each institution of the project
separate(Institution,paste0("inst_",c(1:9)), ";") %>%
pivot_longer(-c(Index, Country,Area, Name, EMail,ProjectNumber, FOADescription, Nationality),
values_to = "Institution") %>%
select(-name) %>%
filter(!is.na(Institution)) %>%
#clean some institutions,
#this could take a long time. There are many cases of the same institution written
#differently
mutate(Institution = stringr::str_trim(Institution)) %>%
distinct() %>%
filter(!Institution %in% c('.', "", "•")) %>%
mutate(Institution = case_when(str_detect(Institution, "COMENA") ~ "Commissariat à l'énergie atomique (COMENA)",
str_detect(Institution, "AAEHC") ~ "Afghanistan Atomic Energy High Commission (AAEHC)",
str_detect(Institution, "AMARAP") ~ "Agence Malienne de Radioprotection (AMARAP)",
T ~ Institution))
#Drop observations with missing contact information ===========================
#create_df_complete is in /functions
df_complete <- create_df_complete(projects)
institutions_id <- df_complete %>%
#Select relevant variables
select(Index, ProjectNumber, FOADescription,Country,Area,Institution, Name, EMail, Nationality) %>%
#create a row by each institution of the project
separate(Institution,paste0("inst_",c(1:9)), ";") %>%
pivot_longer(-c(Index, Country,Area, Name, EMail,ProjectNumber, FOADescription, Nationality),
values_to = "Institution") %>%
select(-name) %>%
filter(!is.na(Institution)) %>%
#clean some institutions,
#this could take a long time. There are many cases of the same institution written
#differently
mutate(Institution = stringr::str_trim(Institution)) %>%
distinct() %>%
filter(!Institution %in% c('.', "", "•")) %>%
mutate(Institution = case_when(str_detect(Institution, "COMENA") ~ "Commissariat à l'énergie atomique (COMENA)",
str_detect(Institution, "AAEHC") ~ "Afghanistan Atomic Energy High Commission (AAEHC)",
str_detect(Institution, "AMARAP") ~ "Agence Malienne de Radioprotection (AMARAP)",
T ~ Institution))
export(institutions_id, 'data/1.reference/clean/institutions.csv')
library(rio)
library(dplyr)
library(tidyr)
library(janitor)
library(stringr)
gmdacr::load_functions('functions')
projects <- import('data/1.reference/Copy of CPs_2022_09_12.xlsx')
df_complete <- create_df_complete(projects)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id(),
country_id = case_when(country_id < 10 ~ paste0("00", country_id),
between(country_id, 10, 99) ~ paste0("0", country_id),
T ~ as.character(country_id)
)
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste0("00", row),
between(row, 10, 99) ~ paste0("0", row),
T ~ as.character(row)
),
cp_id = paste0(country_id, cp)
) %>%
ungroup() %>%
select(Name, country_id, cp_id)
country_codes <- import('data/reference/Copy of Country_Names_2023_06_12.xlsx') %>%
select(Nationality = CountryCode,
Country_name = Country
)
country_codes <- import('data/1.reference/Copy of Country_Names_2023_06_12.xlsx') %>%
select(Nationality = CountryCode,
Country_name = Country
)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id(),
country_id = case_when(country_id < 10 ~ paste0("00", country_id),
between(country_id, 10, 99) ~ paste0("0", country_id),
T ~ as.character(country_id)
)
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste0("00", row),
between(row, 10, 99) ~ paste0("0", row),
T ~ as.character(row)
),
cp_id = paste0(country_id, cp)
) %>%
ungroup() %>%
select(Name, country_id, cp_id)
rio::export(cps_ids, "data/2.sample/cps_sample.csv")
names(df_complete)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id(),
country_id = case_when(country_id < 10 ~ paste0("00", country_id),
between(country_id, 10, 99) ~ paste0("0", country_id),
T ~ as.character(country_id)
)
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste0("00", row),
between(row, 10, 99) ~ paste0("0", row),
T ~ as.character(row)
),
cp_id = paste0(country_id, cp)
) %>%
ungroup() %>%
select(Name, country_id, cp_id, email = EMail)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality, EMail) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id(),
country_id = case_when(country_id < 10 ~ paste0("00", country_id),
between(country_id, 10, 99) ~ paste0("0", country_id),
T ~ as.character(country_id)
)
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste0("00", row),
between(row, 10, 99) ~ paste0("0", row),
T ~ as.character(row)
),
cp_id = paste0(country_id, cp)
) %>%
ungroup() %>%
select(Name, country_id, cp_id, email = EMail)
rio::export(cps_ids, "data/2.sample/cps_sample.csv")
View(cps_ids)
rio::export(cps_ids, "data/2.sample/cps_sample.csv")
sample <-rio::import(cps_ids, "data/2.sample/cps_sample.csv")
sample <-rio::import("data/2.sample/cps_sample.csv")
countries <- sample %>%
select(Country)
names(sample)
cps_ids <- df_complete %>%
filter(!Nationality %in% c("SOI", "KIR")) %>%
group_by(Name) %>%
slice(1) %>%
ungroup() %>%
left_join(country_codes) %>%
select(Name, Country_name, Nationality, EMail) %>%
group_by(Country_name) %>%
mutate(country_id = cur_group_id(),
country_id = case_when(country_id < 10 ~ paste0("00", country_id),
between(country_id, 10, 99) ~ paste0("0", country_id),
T ~ as.character(country_id)
)
) %>%
arrange(country_id, Name) %>%
ungroup() %>%
group_by(Country_name, country_id) %>%
mutate(row =  row_number(),
cp = case_when(row < 10 ~ paste0("00", row),
between(row, 10, 99) ~ paste0("0", row),
T ~ as.character(row)
),
cp_id = paste0(country_id, cp)
) %>%
ungroup() %>%
select(Name, Country_name, country_id, cp_id, email = EMail)
#create categories for countries and cps
#This files are used in Survey Solutions as IDs
sample <-rio::import("data/2.sample/cps_sample.csv")
names(sample)
rio::export(cps_ids, "data/2.sample/cps_sample.csv")
#create categories for countries and cps
#This files are used in Survey Solutions as IDs
sample <-rio::import("data/2.sample/cps_sample.csv")
names(sample)
countries <- sample %>%
select(title = Country_name,
value = country_id) %>%
group_by(title, value) %>%
slice(1) %>%
ungroup() %>%
mutate(parentvalue = "",
attachmentname = "")
export(countries, 'questionnaires/categories/countries.xlsx')
export(countries, 'questionnaires/categories/countries.xlsx', overwrite = T)
cps <- sample %>%
select(title = Name,
value = cp_id,
parentvalue = country_id)
export(cps, 'questionnaires/categories/cps.xlsx', overwrite = T)
cps <- sample %>%
select(title = Name,
value = cp_id,
parentvalue = country_id) %>%
mutate(attachmentname = "")
export(cps, 'questionnaires/categories/cps.xlsx', overwrite = T)
#create categories for countries and cps
#This files are used in Survey Solutions as IDs
sample <-rio::import("data/2.sample/cps_sample.csv")
countries <- sample %>%
select(title = Country_name,
value = country_id) %>%
group_by(title, value) %>%
slice(1) %>%
ungroup() %>%
mutate(parentvalue = "",
attachmentname = "")
export(countries, 'questionnaires/categories/countries.xlsx', overwrite = T)
export(cps, 'questionnaires/categories/cps.xlsx', overwrite = T, sheet = "Categories")
export(cps, 'questionnaires/categories/cps.xlsx', overwrite = T, sheet = "Categories")
export(cps, 'questionnaires/categories/cps.xlsx', overwrite = T, sheetname = "Categories")
