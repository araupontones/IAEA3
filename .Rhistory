relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c("Côte d'Ivoire", "Cote d'Ivoire") ~ "Cote d'Ivoire",
country %in% c('Eswatini') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ") ~ 'Lao P.D.R.',
country %in% c('Saint Vincent and the Grenadin') ~ 'Saint Vincent & the Grenadines',
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con') ~ 'Democratic Rep. of the Congo',
country %in% c('Congo') ~ 'Congo, Rep. of',
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c('The Bahamas') ~ "Bahamas",
country %in% c("Côte d'Ivoire") ~ "Cote d'Ivoire",
country %in% c('Eswatini') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ") ~ 'Lao P.D.R.',
country %in% c('Saint Vincent and the Grenadin') ~ 'Saint Vincent & the Grenadines',
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con') ~ 'Democratic Rep. of the Congo',
country %in% c('Congo') ~ 'Congo, Rep. of',
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
lkp_countries <- import('data/9.lookups/countries.rds')
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c('The Bahamas') ~ "Bahamas",
country %in% c("Brunei") ~ "Brunei Darussalam" ,
country %in% c("Côte d'Ivoire") ~ "Cote d'Ivoire",
country %in% c('Eswatini') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ") ~ 'Lao P.D.R.',
country %in% c('Saint Vincent and the Grenadin') ~ 'Saint Vincent & the Grenadines',
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con') ~ 'Democratic Rep. of the Congo',
country %in% c('Congo') ~ 'Congo, Rep. of',
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c('The Bahamas') ~ "Bahamas",
country %in% c("Brunei") ~ "Brunei Darussalam" ,
country %in% c("Côte d'Ivoire") ~ "Cote d'Ivoire",
country %in% c('Eswatini') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ") ~ 'Lao P.D.R.',
country %in% c('Saint Vincent and the Grenadin') ~ 'Saint Vincent & the Grenadines',
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con') ~ 'Democratic Rep. of the Congo',
country %in% c('Congo', 'Republic of Congo') ~ 'Congo, Rep. of',
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c('The Bahamas') ~ "Bahamas",
country %in% c("Brunei") ~ "Brunei Darussalam" ,
country %in% c("Côte d'Ivoire", 'Ivory Coast') ~ "Cote d'Ivoire",
country %in% c('Eswatini') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ") ~ 'Lao P.D.R.',
country %in% c('Saint Vincent and the Grenadin') ~ 'Saint Vincent & the Grenadines',
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con') ~ 'Democratic Rep. of the Congo',
country %in% c('Congo', 'Republic of Congo') ~ 'Congo, Rep. of',
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c('The Bahamas') ~ "Bahamas",
country %in% c("Brunei") ~ "Brunei Darussalam" ,
country %in% c("Côte d'Ivoire", 'Ivory Coast') ~ "Cote d'Ivoire",
country %in% c('Eswatini') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ") ~ 'Lao P.D.R.',
country %in% c('Saint Vincent and the Grenadin') ~ 'Saint Vincent & the Grenadines',
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con',
"Democratic Rep. of the Congo") ~ 'Democratic Rep. of the Congo',
country %in% c('Congo', 'Republic of Congo') ~ 'Congo, Rep. of',
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c('The Bahamas') ~ "Bahamas",
country %in% c("Brunei") ~ "Brunei Darussalam" ,
country %in% c("Côte d'Ivoire", 'Ivory Coast') ~ "Cote d'Ivoire",
country %in% c('Eswatini') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ") ~ 'Lao P.D.R.',
country %in% c('Saint Vincent and the Grenadin') ~ 'Saint Vincent & the Grenadines',
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con',
"Democratic Republic of the Congo") ~ 'Democratic Rep. of the Congo',
country %in% c('Congo', 'Republic of Congo') ~ 'Congo, Rep. of',
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c('The Bahamas') ~ "Bahamas",
country %in% c("Brunei") ~ "Brunei Darussalam" ,
country %in% c("Côte d'Ivoire", 'Ivory Coast') ~ "Cote d'Ivoire",
country %in% c('Iran') ~ "Iran, Islamic Republic of",
country %in% c('Eswatini') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ") ~ 'Lao P.D.R.',
country %in% c('Saint Vincent and the Grenadin') ~ 'Saint Vincent & the Grenadines',
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con',
"Democratic Republic of the Congo") ~ 'Democratic Rep. of the Congo',
country %in% c('Congo', 'Republic of Congo') ~ 'Congo, Rep. of',
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c('The Bahamas') ~ "Bahamas",
country %in% c("Brunei") ~ "Brunei Darussalam" ,
country %in% c("Côte d'Ivoire", 'Ivory Coast') ~ "Cote d'Ivoire",
country %in% c('Iran') ~ "Iran, Islamic Republic of",
country %in% c('Eswatini', 'Swaziland') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ") ~ 'Lao P.D.R.',
country %in% c('Saint Vincent and the Grenadin') ~ 'Saint Vincent & the Grenadines',
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con',
"Democratic Republic of the Congo") ~ 'Democratic Rep. of the Congo',
country %in% c('Congo', 'Republic of Congo') ~ 'Congo, Rep. of',
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c('The Bahamas') ~ "Bahamas",
country %in% c("Brunei") ~ "Brunei Darussalam" ,
country %in% c("Côte d'Ivoire", 'Ivory Coast') ~ "Cote d'Ivoire",
country %in% c('Iran') ~ "Iran, Islamic Republic of",
country %in% c('South Korea') ~ "Korea, Republic of" ,
country %in% c('Eswatini', 'Swaziland') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ") ~ 'Lao P.D.R.',
country %in% c('Saint Vincent and the Grenadin') ~ 'Saint Vincent & the Grenadines',
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con',
"Democratic Republic of the Congo") ~ 'Democratic Rep. of the Congo',
country %in% c('Congo', 'Republic of Congo') ~ 'Congo, Rep. of',
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c('The Bahamas') ~ "Bahamas",
country %in% c("Brunei") ~ "Brunei Darussalam" ,
country %in% c("Côte d'Ivoire", 'Ivory Coast') ~ "Cote d'Ivoire",
country %in% c('Iran') ~ "Iran, Islamic Republic of",
country %in% c('South Korea') ~ "Korea, Republic of" ,
country %in% c('Eswatini', 'Swaziland') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ",
"Laos") ~ 'Lao P.D.R.',
country %in% c('Saint Vincent and the Grenadin') ~ 'Saint Vincent & the Grenadines',
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con',
"Democratic Republic of the Congo") ~ 'Democratic Rep. of the Congo',
country %in% c('Congo', 'Republic of Congo') ~ 'Congo, Rep. of',
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#funcition to clean country names =================================================
clean_countries <- function(.data){
.data %>%
mutate(country = trimws(country),
country = case_when(
country %in% c("Bolivia, Plurinational State o") ~ "Bolivia",
country %in% c('The Bahamas') ~ "Bahamas",
country %in% c("Brunei") ~ "Brunei Darussalam" ,
country %in% c("Côte d'Ivoire", 'Ivory Coast') ~ "Cote d'Ivoire",
country %in% c('Iran') ~ "Iran, Islamic Republic of",
country %in% c('South Korea') ~ "Korea, Republic of" ,
country %in% c('Eswatini', 'Swaziland') ~ 'Kingdom of Eswatini',
country %in% c("Lao People's Democratic Republ",
"Laos") ~ 'Lao P.D.R.',
country %in% c('Macedonia') ~  "North Macedonia" ,
country %in% c("Moldova") ~ "Republic of Moldova",
country %in% c('Russia') ~ "Russian Federation",
country %in% c('Saint Vincent and the Grenadin',
'Saint Vincent and the Grenadines') ~ 'Saint Vincent & the Grenadines',
country %in% c('Syria') ~ "Syrian Arab Republic" ,
country %in% c('Republic of Serbia') ~ "Serbia",
country %in% c('Venezuela, Bolivarian Republic') ~ "Venezuela",
country %in% c('Democratic Republic of the Con',
"Democratic Republic of the Congo") ~ 'Democratic Rep. of the Congo',
country %in% c('Congo', 'Republic of Congo') ~ 'Congo, Rep. of',
country %in% c("Turkey") ~   "Türkiye" ,
country %in% c('Vietnam') ~  "Viet Nam"  ,
country %in% c('T.T.U.T.J of T. Palestinian A.') ~ "State of Palestine",
T ~ country)
)
}
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
relocate(sovereignt) %>%
rename(country = sovereignt) %>%
clean_countries()
setdiff(lkp_countries$country, world$country)
#fix names of respondents
responses <- import('report/sample/responses.xlsx')
names(responses) <- responses[1,]
names1<- paste("NLO1", names(responses)[2:4], sep = "-")
names_2 <-paste("NLO2", names(responses)[5:7], sep = "-")
names(responses) <- c("country", names1, names_2, "CP-Counterpart")
responses <- responses[-1,]
View(responses)
#check that countries responded to which
names(responses)
responses2 <- responses %>%
mutate(nlo1 = !is.na(`NLO1-NLO`)|!is.na(`NLO1-NLA`)|!is.na(`NLO1-Regional Coordinator`))
View(responses2)
responses2 <- responses %>%
mutate(nlo1 = !is.na(`NLO1-NLO`)|!is.na(`NLO1-NLA`)|!is.na(`NLO1-Regional Coordinator`),
nlo2 = !is.na(`NLO2-NLO`)|!is.na(`NLO2-NLA`)|!is.na(`NLO2-Regional Coordinator`))
responses2 <- responses %>%
mutate(nlo1 = !is.na(`NLO1-NLO`)|!is.na(`NLO1-NLA`)|!is.na(`NLO1-Regional Coordinator`),
nlo2 = !is.na(`NLO2-NLO`)|!is.na(`NLO2-NLA`)|!is.na(`NLO2-Regional Coordinator`),
cp = !is.na(`CP-Counterpart`))
responses2 <- responses %>%
mutate(nlo1 = !is.na(`NLO1-NLO`)|!is.na(`NLO1-NLA`)|!is.na(`NLO1-Regional Coordinator`),
nlo2 = !is.na(`NLO2-NLO`)|!is.na(`NLO2-NLA`)|!is.na(`NLO2-Regional Coordinator`),
cp = !is.na(`CP-Counterpart`),
all = cp & nlo1 & nlo2
)
library(janitor)
tabyl(responses2, all)
responses2 <- responses %>%
mutate(nlo1 = !is.na(`NLO1-NLO`)|!is.na(`NLO1-NLA`)|!is.na(`NLO1-Regional Coordinator`),
nlo2 = !is.na(`NLO2-NLO`)|!is.na(`NLO2-NLA`)|!is.na(`NLO2-Regional Coordinator`),
cp = !is.na(`CP-Counterpart`),
all = cp & nlo1 & nlo2,
only_cp = cp & !nlo1 & !nlo2
)
tabyl(responses2, only_cp)
responses2 <- responses %>%
mutate(nlo1 = !is.na(`NLO1-NLO`)|!is.na(`NLO1-NLA`)|!is.na(`NLO1-Regional Coordinator`),
nlo2 = !is.na(`NLO2-NLO`)|!is.na(`NLO2-NLA`)|!is.na(`NLO2-Regional Coordinator`),
cp = !is.na(`CP-Counterpart`),
all = cp & nlo1 & nlo2,
only_cp = cp & !nlo1 & !nlo2,
only_nlo1 = !cp & nlo1 & !nlo2
)
tabyl(responses2, only_nlo1)
responses2 <- responses %>%
mutate(nlo1 = !is.na(`NLO1-NLO`)|!is.na(`NLO1-NLA`)|!is.na(`NLO1-Regional Coordinator`),
nlo2 = !is.na(`NLO2-NLO`)|!is.na(`NLO2-NLA`)|!is.na(`NLO2-Regional Coordinator`),
cp = !is.na(`CP-Counterpart`),
all = cp & nlo1 & nlo2,
only_cp = cp & !nlo1 & !nlo2
)
data_plot <- responses2 %>%
select(country, all, only_cp)
View(data_plot)
data_plot <- responses2 %>%
select(country, all, only_cp) %>%
pivot_longer(-country)
View(data_plot)
responses2 <- responses %>%
mutate(nlo1 = !is.na(`NLO1-NLO`)|!is.na(`NLO1-NLA`)|!is.na(`NLO1-Regional Coordinator`),
nlo2 = !is.na(`NLO2-NLO`)|!is.na(`NLO2-NLA`)|!is.na(`NLO2-Regional Coordinator`),
cp = !is.na(`CP-Counterpart`),
all = cp & nlo1 & nlo2,
only_cp = cp & !nlo1 & !nlo2,
only_one_nlo = cp & nlo1 & !nlo2
)
data_plot <- responses2 %>%
select(country, all, only_cp) %>%
pivot_longer(-country)
data_plot <- responses2 %>%
select(country, all, only_cp, only_one_nlo) %>%
pivot_longer(-country)
tabyl(responses2, cp_nlo1)
responses2 <- responses %>%
mutate(nlo1 = !is.na(`NLO1-NLO`)|!is.na(`NLO1-NLA`)|!is.na(`NLO1-Regional Coordinator`),
nlo2 = !is.na(`NLO2-NLO`)|!is.na(`NLO2-NLA`)|!is.na(`NLO2-Regional Coordinator`),
cp = !is.na(`CP-Counterpart`),
all = cp & nlo1 & nlo2,
only_cp = cp & !nlo1 & !nlo2,
cp_nlo1 = cp & nlo1 & !nlo2
)
tabyl(responses2, cp_nlo1)
responses2 <- responses %>%
mutate(nlo1 = !is.na(`NLO1-NLO`)|!is.na(`NLO1-NLA`)|!is.na(`NLO1-Regional Coordinator`),
nlo2 = !is.na(`NLO2-NLO`)|!is.na(`NLO2-NLA`)|!is.na(`NLO2-Regional Coordinator`),
cp = !is.na(`CP-Counterpart`),
all = cp & nlo1 & nlo2,
only_cp = cp & !nlo1 & !nlo2,
cp_nlo1 = cp & nlo1 & !nlo2,
cp_nlo2 = cp & !nlo1 & nlo2
)
tabyl(responses2, cp_nlo2)
data_plot <- responses2 %>%
select(country, all, only_cp, cp_nlo1, cp_nlo2) %>%
pivot_longer(-country)
data_plot <- responses2 %>%
select(country, all, only_cp, cp_nlo1, cp_nlo2) %>%
pivot_longer(-country) %>%
filter(value)
data_plot <- responses2 %>%
select(country, all, only_cp, cp_nlo1, cp_nlo2) %>%
pivot_longer(-country) %>%
filter(value) %>%
left_join(world)
data_plot <- responses2 %>%
select(country, all, only_cp, cp_nlo1, cp_nlo2) %>%
pivot_longer(-country) %>%
filter(value) %>%
left_join(world, by = 'country')
ggplot(data = world) +
geom_sf(aes(fill=name)) +
theme_bw()
ggplot(data = world) +
geom_sf() +
theme_bw()
ggplot(data = world,
aes(fill = value)) +
geom_sf() +
theme_bw()
data_plot <- responses2 %>%
select(country, all, only_cp, cp_nlo1, cp_nlo2) %>%
pivot_longer(-country) %>%
filter(value) %>%
left_join(world, by = 'country',
names_to = 'status')
data_plot <- responses2 %>%
select(country, all, only_cp, cp_nlo1, cp_nlo2) %>%
pivot_longer(-country,
names_to = 'status') %>%
filter(value) %>%
left_join(world, by = 'country'
)
ggplot(data = world,
aes(fill = status)) +
geom_sf() +
theme_bw()
data_plot <- responses2 %>%
select(country, all, only_cp, cp_nlo1, cp_nlo2) %>%
pivot_longer(-country,
names_to = 'status') %>%
filter(value) %>%
left_join(world, by = 'country'
)
ggplot(data = world,
aes(fill = status)) +
geom_sf() +
theme_bw()
data_plot <- responses2 %>%
select(country, all, only_cp, cp_nlo1, cp_nlo2) %>%
pivot_longer(-country,
names_to = 'status') %>%
filter(value) %>%
left_join(world, by = 'country'
)
ggplot(data = data_plot,
aes(fill = status)) +
geom_sf() +
theme_bw()
data_plot <- responses2 %>%
select(country, all, only_cp, cp_nlo1, cp_nlo2) %>%
pivot_longer(-country,
names_to = 'status') %>%
filter(value) %>%
left_join(world, by = 'country'
)
names(data_plot)
data_plot <- responses2 %>%
select(country, all, only_cp, cp_nlo1, cp_nlo2) %>%
pivot_longer(-country,
names_to = 'status') %>%
filter(value) %>%
left_join(world, by = 'country'
) %>%
sf::st_as_sf()
ggplot(data = data_plot,
aes(fill = status)) +
geom_sf() +
theme_bw()
data_plot <- responses2 %>%
select(country, all, only_cp, cp_nlo1, cp_nlo2) %>%
pivot_longer(-country,
names_to = 'status') %>%
filter(value) %>%
full_join(world, by = 'country'
) %>%
sf::st_as_sf()
ggplot(data = data_plot,
aes(fill = status)) +
geom_sf() +
theme_bw()
View(responses)
