export_plots <- lapply(themes, function(theme_){
message(theme_)
#Fetch theme details from lookup
theme_code_ <- find_in_lkp(projects, fetch = 'theme_code', when = 'theme', equals = theme_)[1]
theme_dir <- find_in_lkp(lkp_themes, 'dirname', 'theme_code', theme_code_)
#define exit directory of this theme
exdir_theme <- glue('{exdir}/{theme_dir}')
if(!dir.exists(exdir_theme)){
dir.create(exdir_theme)
}
#Define data of the theme
db_theme <- projects %>% filter(theme == theme_)
#Count projects by theme
num_projects_theme <- prettyNum(nrow(db_theme), big.mark = ',')
#Count projects by Improvement -------------------------------------------------
projects_foa <- db_theme %>%
group_by(FOACode_new, FOA_new) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ ))
#Plot projects by FOA (using improvement)
plot_imp<- projects_foa %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme)
plot_imp
#Plot using FOA name
plot_foa <- projects_foa %>%
plot_num_projects(theme_, y_variable = FOA_new,
regroup = F,
num_projects_theme)
ggsave(glue('{exdir_theme}/projects_foas.png'),plot_foa)
ggsave(glue('{exdir_theme}/projects_improvements.png'),plot_imp)
#Count projects by Improvement and region -----------------------------------
projects_foa_region <- db_theme %>%
group_by(FOACode_new, FOA_new,region) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ ))
#plot by Improvement
plot_imp_reg <- projects_foa_region %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme, label_size = 3) +
facet_wrap(~ region)
#Plot by foa name
# plot_foa_reg <- projects_foa_region %>%
#   plot_num_projects(theme_, y_variable = FOA_new,
#                     regroup = F,num_projects_theme, label_size = 3) +
#   facet_wrap(~ region)
ggsave(glue('{exdir_theme}/projects_improvements_reg.png'),plot_imp_reg)
# ggsave(glue('{exdir_theme}/projects_improvements_reg.png'),plot_imp_reg)
})
plot_num_projects <- function(.data,
theme,
y_variable = Improvement,
regroup = F,
num_projects_theme,
label_size = 5){
d <- .data
if(regroup){
d <- .data %>% group_by(c(Improvement, region)) %>% summarise(projects = sum(projects), .groups = 'drop')
}
d %>%
ggplot(
aes(x = projects,
y = reorder({{y_variable}}, projects),
label = prettyNum(projects, big.mark = ','))
) +
geom_col(fill = blue,
width = .8
) +
geom_text(hjust = 1.5,
size = label_size,
family = "Open Sans",
color = "white") +
scale_y_discrete(label = label_wrap_gen(30)) +
scale_fill_brewer(palette = 'Greens') +
labs(title = "Number of Projects Supported by the TCP in the 21st Century.",
subtitle = glue('{theme}: Distribution of the {num_projects_theme} projects supported.'),
caption = "Source: Administrative Data.")+
theme_main()
}
export_plots <- lapply(themes, function(theme_){
message(theme_)
#Fetch theme details from lookup
theme_code_ <- find_in_lkp(projects, fetch = 'theme_code', when = 'theme', equals = theme_)[1]
theme_dir <- find_in_lkp(lkp_themes, 'dirname', 'theme_code', theme_code_)
#define exit directory of this theme
exdir_theme <- glue('{exdir}/{theme_dir}')
if(!dir.exists(exdir_theme)){
dir.create(exdir_theme)
}
#Define data of the theme
db_theme <- projects %>% filter(theme == theme_)
#Count projects by theme
num_projects_theme <- prettyNum(nrow(db_theme), big.mark = ',')
#Count projects by Improvement -------------------------------------------------
projects_foa <- db_theme %>%
group_by(FOACode_new, FOA_new) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ )) %>%
mutate(region = "")
#Plot projects by FOA (using improvement)
plot_imp<- projects_foa %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme)
plot_imp
#Plot using FOA name
plot_foa <- projects_foa %>%
plot_num_projects(theme_, y_variable = FOA_new,
regroup = F,
num_projects_theme)
ggsave(glue('{exdir_theme}/projects_foas.png'),plot_foa)
ggsave(glue('{exdir_theme}/projects_improvements.png'),plot_imp)
#Count projects by Improvement and region -----------------------------------
projects_foa_region <- db_theme %>%
group_by(FOACode_new, FOA_new,region) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ ))
#plot by Improvement
plot_imp_reg <- projects_foa_region %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme, label_size = 3) +
facet_wrap(~ region)
#Plot by foa name
# plot_foa_reg <- projects_foa_region %>%
#   plot_num_projects(theme_, y_variable = FOA_new,
#                     regroup = F,num_projects_theme, label_size = 3) +
#   facet_wrap(~ region)
ggsave(glue('{exdir_theme}/projects_improvements_reg.png'),plot_imp_reg)
# ggsave(glue('{exdir_theme}/projects_improvements_reg.png'),plot_imp_reg)
})
export_plots <- lapply(themes, function(theme_){
message(theme_)
#Fetch theme details from lookup
theme_code_ <- find_in_lkp(projects, fetch = 'theme_code', when = 'theme', equals = theme_)[1]
theme_dir <- find_in_lkp(lkp_themes, 'dirname', 'theme_code', theme_code_)
#define exit directory of this theme
exdir_theme <- glue('{exdir}/{theme_dir}')
if(!dir.exists(exdir_theme)){
dir.create(exdir_theme)
}
#Define data of the theme
db_theme <- projects %>% filter(theme == theme_)
#Count projects by theme
num_projects_theme <- prettyNum(nrow(db_theme), big.mark = ',')
#Count projects by Improvement -------------------------------------------------
projects_foa <- db_theme %>%
group_by(FOACode_new, FOA_new) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ )) %>%
mutate(region = "")
#Plot projects by FOA (using improvement)
plot_imp<- projects_foa %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme)
#Plot using FOA name
plot_foa <- projects_foa %>%
plot_num_projects(theme_, y_variable = FOA_new,
regroup = F,
num_projects_theme)
ggsave(glue('{exdir_theme}/projects_foas.png'),plot_foa)
ggsave(glue('{exdir_theme}/projects_improvements.png'),plot_imp)
#Count projects by Improvement and region -----------------------------------
projects_foa_region <- db_theme %>%
group_by(FOACode_new, FOA_new,region) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ ))
#plot by Improvement
plot_imp_reg <- projects_foa_region %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme, label_size = 3) +
facet_wrap(~ region)
#Plot by foa name
# plot_foa_reg <- projects_foa_region %>%
#   plot_num_projects(theme_, y_variable = FOA_new,
#                     regroup = F,num_projects_theme, label_size = 3) +
#   facet_wrap(~ region)
ggsave(glue('{exdir_theme}/projects_improvements_reg.png'),plot_imp_reg)
# ggsave(glue('{exdir_theme}/projects_improvements_reg.png'),plot_imp_reg)
})
export_plots <- lapply(themes, function(theme_){
message(theme_)
#Fetch theme details from lookup
theme_code_ <- find_in_lkp(projects, fetch = 'theme_code', when = 'theme', equals = theme_)[1]
theme_dir <- find_in_lkp(lkp_themes, 'dirname', 'theme_code', theme_code_)
#define exit directory of this theme
exdir_theme <- glue('{exdir}/{theme_dir}')
if(!dir.exists(exdir_theme)){
dir.create(exdir_theme)
}
#Define data of the theme
db_theme <- projects %>% filter(theme == theme_)
#Count projects by theme
num_projects_theme <- prettyNum(nrow(db_theme), big.mark = ',')
#Count projects by Improvement -------------------------------------------------
projects_foa <- db_theme %>%
group_by(FOACode_new, FOA_new) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ )) %>%
mutate(region = "")
#Plot projects by FOA (using improvement)
plot_imp<- projects_foa %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme)
#Plot using FOA name
plot_foa <- projects_foa %>%
plot_num_projects(theme_, y_variable = FOA_new,
regroup = F,
num_projects_theme)
ggsave(glue('{exdir_theme}/projects_foas.png'),plot_foa)
cli::cli_alert_info("done")
ggsave(glue('{exdir_theme}/projects_improvements.png'),plot_imp)
#Count projects by Improvement and region -----------------------------------
projects_foa_region <- db_theme %>%
group_by(FOACode_new, FOA_new,region) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ ))
#plot by Improvement
plot_imp_reg <- projects_foa_region %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme, label_size = 3) +
facet_wrap(~ region)
#Plot by foa name
# plot_foa_reg <- projects_foa_region %>%
#   plot_num_projects(theme_, y_variable = FOA_new,
#                     regroup = F,num_projects_theme, label_size = 3) +
#   facet_wrap(~ region)
ggsave(glue('{exdir_theme}/projects_improvements_reg.png'),plot_imp_reg)
# ggsave(glue('{exdir_theme}/projects_improvements_reg.png'),plot_imp_reg)
})
plot_num_projects <- function(.data,
theme,
y_variable = Improvement,
regroup = F,
num_projects_theme,
label_size = 5){
d <- .data
if(regroup){
d <- .data %>% group_by(Improvement, region) %>% summarise(projects = sum(projects), .groups = 'drop')
}
d %>%
ggplot(
aes(x = projects,
y = reorder({{y_variable}}, projects),
label = prettyNum(projects, big.mark = ','))
) +
geom_col(fill = blue,
width = .8
) +
geom_text(hjust = 1.5,
size = label_size,
family = "Open Sans",
color = "white") +
scale_y_discrete(label = label_wrap_gen(30)) +
scale_fill_brewer(palette = 'Greens') +
labs(title = "Number of Projects Supported by the TCP in the 21st Century.",
subtitle = glue('{theme}: Distribution of the {num_projects_theme} projects supported.'),
caption = "Source: Administrative Data.")+
theme_main()
}
export_plots <- lapply(themes, function(theme_){
message(theme_)
#Fetch theme details from lookup
theme_code_ <- find_in_lkp(projects, fetch = 'theme_code', when = 'theme', equals = theme_)[1]
theme_dir <- find_in_lkp(lkp_themes, 'dirname', 'theme_code', theme_code_)
#define exit directory of this theme
exdir_theme <- glue('{exdir}/{theme_dir}')
if(!dir.exists(exdir_theme)){
dir.create(exdir_theme)
}
#Define data of the theme
db_theme <- projects %>% filter(theme == theme_)
#Count projects by theme
num_projects_theme <- prettyNum(nrow(db_theme), big.mark = ',')
#Count projects by Improvement -------------------------------------------------
projects_foa <- db_theme %>%
group_by(FOACode_new, FOA_new) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ )) %>%
mutate(region = "1")
#Plot projects by FOA (using improvement)
plot_imp<- projects_foa %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme)
#Plot using FOA name
plot_foa <- projects_foa %>%
plot_num_projects(theme_, y_variable = FOA_new,
regroup = F,
num_projects_theme)
ggsave(glue('{exdir_theme}/projects_foas.png'),plot_foa)
cli::cli_alert_info("done")
ggsave(glue('{exdir_theme}/projects_improvements.png'),plot_imp)
#Count projects by Improvement and region -----------------------------------
projects_foa_region <- db_theme %>%
group_by(FOACode_new, FOA_new,region) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ ))
#plot by Improvement
plot_imp_reg <- projects_foa_region %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme, label_size = 3) +
facet_wrap(~ region)
#Plot by foa name
# plot_foa_reg <- projects_foa_region %>%
#   plot_num_projects(theme_, y_variable = FOA_new,
#                     regroup = F,num_projects_theme, label_size = 3) +
#   facet_wrap(~ region)
ggsave(glue('{exdir_theme}/projects_improvements_reg.png'),plot_imp_reg)
# ggsave(glue('{exdir_theme}/projects_improvements_reg.png'),plot_imp_reg)
})
export_plots <- lapply(themes, function(theme_){
message(theme_)
#Fetch theme details from lookup
theme_code_ <- find_in_lkp(projects, fetch = 'theme_code', when = 'theme', equals = theme_)[1]
theme_dir <- find_in_lkp(lkp_themes, 'dirname', 'theme_code', theme_code_)
#define exit directory of this theme
exdir_theme <- glue('{exdir}/{theme_dir}')
if(!dir.exists(exdir_theme)){
dir.create(exdir_theme)
}
#Define data of the theme
db_theme <- projects %>% filter(theme == theme_)
#Count projects by theme
num_projects_theme <- prettyNum(nrow(db_theme), big.mark = ',')
#Count projects by Improvement -------------------------------------------------
projects_foa <- db_theme %>%
group_by(FOACode_new, FOA_new) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ )) %>%
mutate(region = "1")
#Plot projects by FOA (using improvement)
plot_imp<- projects_foa %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme)
#Plot using FOA name
plot_foa <- projects_foa %>%
plot_num_projects(theme_, y_variable = FOA_new,
regroup = F,
num_projects_theme)
ggsave(glue('{exdir_theme}/projects_foas.png'),plot_foa)
cli::cli_alert_info("done")
ggsave(glue('{exdir_theme}/projects_improvements.png'),plot_imp)
#Count projects by Improvement and region -----------------------------------
projects_foa_region <- db_theme %>%
group_by(FOACode_new, FOA_new,region) %>%
summarise(projects = n(),
.groups = 'drop') %>%
left_join(filter(lkp_improvements, theme_code == theme_code_ ))
#plot by Improvement
plot_imp_reg <- projects_foa_region %>%
plot_num_projects(theme_, y_variable = Improvement,
regroup = T,
num_projects_theme, label_size = 3) +
facet_wrap(~ region)
#Plot by foa name
plot_foa_reg <- projects_foa_region %>%
plot_num_projects(theme_, y_variable = FOA_new,
regroup = F,num_projects_theme, label_size = 3) +
facet_wrap(~ region)
ggsave(glue('{exdir_theme}/projects_improvements_reg.png'),plot_imp_reg)
ggsave(glue('{exdir_theme}/projects_foas_reg.png'),plot_foa_reg)
})
projects %>%
group_by(FOA_new) %>%
summarise(projects = sum(projects))
projects %>%
group_by(FOA_new) %>%
summarise(projects = n())
projects %>%
group_by(FOA_new,FOA_new) %>%
summarise(projects = n())
projects %>%
group_by(FOA_new,FOACode_new) %>%
summarise(projects = n())
projects %>%
group_by(theme) %>%
summarise(projects = n())
projects %>%
group_by(theme) %>%
summarise(projects = n()) %>%
plot_num_projects()
projects %>%
group_by(theme) %>%
summarise(projects = n()) %>%
plot_num_projects(theme = "All")
projects %>%
group_by(theme) %>%
summarise(projects = n()) %>%
plot_num_projects(theme = "All",
num_projects_theme = 47643)
projects %>%
group_by(theme) %>%
summarise(projects = n()) %>%
plot_num_projects(theme = "All",
y_variable = theme,
num_projects_theme = 47643)
#Total projects by thematic area
total_projects = prettyNum(nrow(projects), big.mark = ',')
projects %>%
group_by(theme) %>%
summarise(projects = n()) %>%
plot_num_projects(theme = "All",
y_variable = theme,
num_projects_theme = 47643)
projects %>%
group_by(theme) %>%
summarise(projects = n()) %>%
plot_num_projects(theme = "All",
y_variable = theme,
num_projects_theme = total_projects)
projects %>%
group_by(theme) %>%
summarise(projects = n()) %>%
plot_num_projects(theme = "Across Tematic Areas",
y_variable = theme,
num_projects_theme = total_projects)
projects %>%
group_by(theme, region) %>%
summarise(projects = n()) %>%
plot_num_projects(theme = "Across Tematic Areas",
y_variable = theme,
num_projects_theme = total_projects) +
facet_wrap(~region)
projects %>%
group_by(theme, region) %>%
summarise(projects = n()) %>%
plot_num_projects(theme = "Across Tematic Areas",
y_variable = theme,
num_projects_theme = total_projects,
label_size = 2) +
facet_wrap(~region)
plot_num_projects <- function(.data,
theme,
y_variable = Improvement,
regroup = F,
num_projects_theme,
label_size = 5,
hjust = 1.5){
d <- .data
if(regroup){
d <- .data %>% group_by(Improvement, region) %>% summarise(projects = sum(projects), .groups = 'drop')
}
d %>%
ggplot(
aes(x = projects,
y = reorder({{y_variable}}, projects),
label = prettyNum(projects, big.mark = ','))
) +
geom_col(fill = blue,
width = .8
) +
geom_text(hjust =hjust,
size = label_size,
family = "Open Sans",
color = "white") +
scale_y_discrete(label = label_wrap_gen(30)) +
scale_fill_brewer(palette = 'Greens') +
labs(title = "Number of Projects Supported by the TCP in the 21st Century.",
subtitle = glue('{theme}: Distribution of the {num_projects_theme} projects supported.'),
caption = "Source: Administrative Data.")+
theme_main()
}
projects %>%
group_by(theme, region) %>%
summarise(projects = n()) %>%
plot_num_projects(theme = "Across Tematic Areas",
y_variable = theme,
num_projects_theme = total_projects,
label_size = 2,
hjust = 1) +
facet_wrap(~region)
projects %>%
group_by(theme) %>%
summarise(projects = n()) %>%
plot_num_projects(theme = "Across Tematic Areas",
y_variable = theme,
num_projects_theme = total_projects) %>%
ggsave(glue('{exdir}/total_projects.png'))
projects %>%
group_by(theme) %>%
summarise(projects = n()) %>%
plot_num_projects(theme = "Across Tematic Areas",
y_variable = theme,
num_projects_theme = total_projects)
ggsave(glue('{exdir}/total_projects.png'))
ggsave(glue('{exdir}/total_projects_regions.png'))
dir_plots <- file.path(dir_project, 'analysis/plots')
dir_project <- 'C:/repositaries/1.work/IAEA3'
dir_plots <- file.path(dir_project, 'analysis/plots')
list.files(dir_plots)
dir_plots_projects <- file.path(dir_plots, "2.projects")
list.files(dir_plots_projects)
