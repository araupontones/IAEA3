c("right", "bottom")
),
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,12),
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center"),
),
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,12),
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center"),
),
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,10),
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center"),
),
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,10),
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,12),
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white")
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
) +
theme(plot.title.position = 'plot')
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
) +
theme(plot.title.position = 'plot')
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
title = "Orgs",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
title = "e most significant partnerships in the context of the TC programme.",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
title = "Most significant partnerships in the context of the TC programme.",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
)
?treemap
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
#title
title = "Most significant partnerships in the context of the TC programme.",
fontfamily.title = "Open Sans",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
#title
title = "Most significant partnerships in the context of the TC programme.",
fontfamily.title = "Open Sans",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
) +
facet_wrap(~ sector)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
#title
title = "Most significant partnerships in the context of the TC programme.",
fontfamily.title = "Open Sans",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
) %>%
facet_wrap(~ sector)
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
#title
title = "Most significant partnerships in the context of the TC programme.",
fontfamily.title = "Open Sans",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
)
ggplot(data_plot,
aes(area = total)
) +
geom_treemap()
data_plot <- partners %>%
filter(theme == "FOOD and AGRICULTURE") %>%
filter(value != "Other") %>%
filter(value != "Not applicable") %>%
filter(!is.na(value)) %>%
group_by(sector, value) %>%
summarise(total = n()) %>%
ungroup() %>%
mutate(value = glue('{value} ({total})'))
?treemap
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
#title
title = "Most significant partnerships in the context of the TC programme.",
fontfamily.title = "Open Sans",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
)
data_plot <- partners %>%
filter(theme == "FOOD and AGRICULTURE") %>%
filter(value != "Other") %>%
filter(value != "Not applicable") %>%
filter(!is.na(value)) %>%
group_by(sector, value) %>%
summarise(total = n()) %>%
ungroup() %>%
mutate(value = glue('{value}/n ({total})'))
?treemap
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
#title
title = "Most significant partnerships in the context of the TC programme.",
fontfamily.title = "Open Sans",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
)
data_plot <- partners %>%
filter(theme == "FOOD and AGRICULTURE") %>%
filter(value != "Other") %>%
filter(value != "Not applicable") %>%
filter(!is.na(value)) %>%
group_by(sector, value) %>%
summarise(total = n()) %>%
ungroup() %>%
mutate(value = glue('{value}\n ({total})'))
treemap(data_plot,
index= c("sector","value"),
vSize = "total",
#title
title = "Most significant partnerships in the context of the TC programme.",
fontfamily.title = "Open Sans",
fontsize.labels = c(18,12),
fontfamily.labels = "Open Sans",
bg.labels = 'white',
palette = "Blues",
align.labels=list(
#titles (sector)
c("left", "top"),
#labels (values)
c("center", "center")
),
border.col = c("white"),
border.lwds=c(7,2)
)
ggsave('plots/visibility_partnerships.png',
last_plot())
empty
View(qa)
p <- raw_data %>%
select(id = RespondentID,
country,
region,
role,
starts_with(glue('partnerships'))
)
View(p)
p <- raw_data %>%
select(id = RespondentID,
country,
region,
role,
starts_with(glue('partnerships'))
) %>%
tidyr::pivot_longer(-c( country, role, id, region)) %>%
mutate(theme = str_extract(name, '__(.*?)_'),
theme = str_remove_all(theme, "_"),
sector = str_remove_all(name, glue('partnerships__{theme}_')),
sector = trim(sector),
theme = str_trim(theme),
value = forcats::fct_recode(value, "Not applicable" = "N/A")
) %>%
select(-name)
View(p)
library(rio)
library(dplyr)
library(tidyr)
library(janitor)
library(stringr)
gmdacr::load_functions('functions/')
#import raw data creted in 0.format/format_names_part_1.R
#the above script formats the data from SPSS to R so it is readable
raw_data <- import('data/7.NLO/1.raw/Part_1.rds')
p <- raw_data %>%
select(id = RespondentID,
country,
region,
role,
starts_with(glue('sdg'))
)
names(p)
View(p)
p <- raw_data %>%
select(id = RespondentID,
country,
region,
role,
starts_with(glue('sdg'))
) %>%
tidyr::pivot_longer(-c( country, role, id, region))
p <- raw_data %>%
select(id = RespondentID,
country,
region,
role,
starts_with(glue('sdg'))
) %>%
tidyr::pivot_longer(-c( country, role, id, region)) %>%
mutate(area = str_remove_all(name, "sdg_|__[0-9]{1,}")
)
p <- raw_data %>%
select(id = RespondentID,
country,
region,
role,
starts_with(glue('sdg'))
) %>%
tidyr::pivot_longer(-c( country, role, id, region)) %>%
mutate(area = str_remove_all(name, "sdg_|___[0-9]{1,}")
)
p <- raw_data %>%
select(id = RespondentID,
country,
region,
role,
starts_with(glue('sdg'))
) %>%
tidyr::pivot_longer(-c( country, role, id, region)) %>%
mutate(area = str_remove_all(name, "sdg_|____[0-9]{1,}")
)
p <- raw_data %>%
select(id = RespondentID,
country,
region,
role,
starts_with(glue('sdg'))
) %>%
tidyr::pivot_longer(-c( country, role, id, region)) %>%
mutate(area = str_remove_all(name, "sdg_|____[0-9]{1,}")
) %>%
select(-name)
#export ------------------------------------------------------------------------
export(p, 'data/7.NLO/2.raw_formatted/Part_1_sdgs.rds')
tabyl(p, value)
tabyl(p, value) %>% arrange(n)
p <- raw_data %>%
select(id = RespondentID,
country,
region,
role,
starts_with(glue('sdg'))
) %>%
tidyr::pivot_longer(-c( country, role, id, region),
values_to = "sdg") %>%
mutate(area = str_remove_all(name, "sdg_|____[0-9]{1,}")
) %>%
select(-name)
#export ------------------------------------------------------------------------
export(p, 'data/7.NLO/2.raw_formatted/Part_1_sdgs.rds')
