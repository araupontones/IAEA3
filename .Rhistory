powerbi_sus <- sustainability %>%
group_by(country,region, theme,improvement, foa,outcome, foa_nlo1_effectiveness) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
)
tabyl(powerbi_sus, foa)
powerbi_eff <- effectiveness %>%
group_by(country,region, theme,improvement, foa,int_outcome, foa_nlo1_effectiveness) %>%
summarise(when = min(period, na.rm = T),
achieved = max(achieved)
)
tabyl(powerbi_sus, foa)
powerbi_sus <- sustainability %>%
filter(is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, foa_nlo1_effectiveness) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
)
tabyl(powerbi_sus, foa)
powerbi_sus <- sustainability %>%
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, foa_nlo1_effectiveness) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
)
tabyl(powerbi_sus, foa)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, foa_nlo1_effectiveness) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
)
powerbi_eff <- effectiveness %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,int_outcome, foa_nlo1_effectiveness) %>%
summarise(when = min(period, na.rm = T),
achieved = max(achieved)
)
tabyl(powerbi_sus, foa)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, foa_nlo1_effectiveness) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
)
names(powerbi_eff)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, foa_nlo1_effectiveness) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome, when_outcome, achieved_outcome) %>%
left_join(powerbi_eff,by= c("country", "theme", "foa"))
tabyl(powerbi_sus, foa)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, foa_nlo1_effectiveness) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
)
tabyl(powerbi_sus, foa)
tabyl(powerbi_sus, country,foa)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, foa_nlo1_effectiveness) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome, when_outcome, achieved_outcome) %>%
left_join(powerbi_eff)
tabyl(powerbi_sus, country,foa)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, foa_nlo1_effectiveness) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
)
str(powerbi_sus)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
)
tabyl(powerbi_sus,foa)
tabyl(powerbi_eff, foa)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome, when_outcome, achieved_outcome) %>%
left_join(powerbi_eff)
powerbi_eff <- effectiveness %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,int_outcome, foa_nlo1_effectiveness) %>%
summarise(when = min(period, na.rm = T),
achieved = max(achieved),
.groups = 'drop'
)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome, when_outcome, achieved_outcome) %>%
left_join(powerbi_eff)
tabyl(powerbi_sus,foa)
powerbi_eff <- effectiveness %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,int_outcome, foa_nlo1_effectiveness) %>%
summarise(when = min(period, na.rm = T),
achieved = max(achieved),
.groups = 'drop'
)
warnings()
powerbi_eff <- effectiveness %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa))
powerbi_eff <- effectiveness %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,int_outcome, foa_nlo1_effectiveness) %>%
summarise(when = min(period, na.rm = T),
achieved = max(achieved),
.groups = 'drop'
)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome, when_outcome, achieved_outcome) %>%
left_join(powerbi_eff)
View(powerbi_sus)
library(rio)
library(dplyr)
library(tidyr)
library(janitor)
library(stringr)
gmdacr::load_functions('functions/')
#import raw data creted in 0.format/format_names_part_1.R
#the above script formats the data from SPSS to R so it is readable
raw_data <- import('data/7.NLO/1.raw/Part_1.rds')
#Mapping of foas
mapping_foas <- import('data/1.reference/mapping_foas.xlsx') %>%
#updating the name of the foa
select(foa,
foa_nlo1_effectiveness,
improvement) %>%
filter(!is.na(foa_nlo1_effectiveness)) %>%
group_by(foa) %>%
slice(1) %>%
ungroup()
#lookup outcomes (to be consistent with ToC)
lkp_outcomes <- import('data/9.lookups/outcomes.xlsx')
#define section
sections <- c(#"relevance")
#"effectiveness")
"sustainability")
#"regionalCoop",
#"future",
#"visibility")
#define themes ---------------------------------------------------------------
themes <- names(raw_data)[str_detect(names(raw_data), 'theme')]
#each team enabled a different section of the questionnaire.
#bring all themes in a tidy format
#the name of the variable (created in 0.format/format_names_part_1.R) contains all the information
append_themes <- lapply(themes, function(t){
#get the suffix, it allows to identify the theme of the variables
sufix = get_suffix(t, raw_data)
r <- raw_data %>%
#keep data for relevance section only,
#and pivot it longer
#function created in functions.
keep_section(t, sections[1], sufix) %>%
#   #the column name contains all the info:
mutate(section = str_extract(name, '^.*?(?=-|_)'),
foa = str_remove(name, '^.*_[a-z]{1,}_'),
improvement = str_extract(foa, "_.{1,}$"),
foa = str_remove(foa, improvement),
improvement = str_remove(improvement, "_"),
improvement = str_trim(improvement),
improvement = str_to_sentence(improvement),
improvement = str_replace_all(improvement, "/ ", "/"),
improvement = str_replace_all(improvement, "education centres", "education centre")
) %>%
rename(period = value,
foa_nlo1_effectiveness = foa,
outcome_nlo = improvement ) %>%
select(-name)
}) %>% do.call(rbind,.)
tabyl(append_themes, improvement)
#clean relevance ---------------------------------------------------------------
periods <- sort(unique(append_themes$period))
message(paste("Before: ", nrow(append_themes)))
clean_sustainability <- append_themes %>%
mutate(period = factor(period,
labels = periods,
ordered = T)) %>%
#get the foas
mutate(foa_nlo1_effectiveness = str_trim(foa_nlo1_effectiveness),
foa_nlo1_effectiveness = str_replace_all(foa_nlo1_effectiveness, "  ", " ")) %>%
left_join(mapping_foas, by = c("foa_nlo1_effectiveness")) %>%
#get the outcomes
left_join(lkp_outcomes) %>%
select(-outcome_nlo) %>%
#identifit those countries that have achieved it
mutate(achieved = ifelse(is.na(period)|period == "N/A", 0,1),
period = fct_recode(period, "< 2000" = "> 2000"))
names(clean_sustainability)
#export ------------------------------------------------------------------------
export(clean_sustainability, 'data/7.NLO/2.raw_formatted/Part_1_sustainability.rds')
library(rio)
library(ggplot2)
library(RColorBrewer)
library(extrafont)
sustainability <- import('data/7.NLO/2.raw_formatted/Part_1_sustainability.rds')
nrow(sustainability)
tabyl(sustainability, foa)
#glue('{missing} of the questions were missing')
names(sustainability)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, int_outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome,int_outcome, when_outcome, achieved_outcome)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, int_outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome,int_outcome, when_outcome, achieved_outcome)
tabyl(powerbi_sus,foa)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, int_outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome,int_outcome, when_outcome, achieved_outcome) %>%
left_join(powerbi_eff)
tabyl(powerbi_sus,foa)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, int_outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome,int_outcome, when_outcome, achieved_outcome) %>%
left_join(powerbi_eff) %>%
relocate(when,.after = when_outcome)
sum(powerbi_sus$achieved)
sum(powerbi_sus$achieved_outcome)
powerbi_eff <- effectiveness %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,int_outcome, foa_nlo1_effectiveness) %>%
summarise(when_int_outcome = min(period, na.rm = T),
achieved_int_outcome = max(achieved),
.groups = 'drop'
)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, int_outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome,int_outcome, when_outcome, achieved_outcome) %>%
left_join(powerbi_eff) %>%
relocate(when_int,.after = when_outcome)
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, int_outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome,int_outcome, when_outcome, achieved_outcome) %>%
left_join(powerbi_eff) %>%
relocate(when_int_outcome,.after = when_outcome)
export(powerbi_sus, glue('data/11.powerbi/sustainability.csv'))
powerbi_wide <- powerbi_sus
powerbi_long <- powerbi_sus
View(powerbi_long)
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome)
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome),
values_to = when_int_outcome
)
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome))
mutate(id = as.character(paste0("A",row_number()))
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, int_outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome,int_outcome, when_outcome, achieved_outcome) %>%
#join with efficiency to get outcomes and int_outcomes in one page
left_join(powerbi_eff) %>%
relocate(when_int_outcome,.after = when_outcome) %>%
mutate(id = as.character(paste0("A",row_number())))
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, int_outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome,int_outcome, when_outcome, achieved_outcome) %>%
#join with efficiency to get outcomes and int_outcomes in one page
left_join(powerbi_eff) %>%
relocate(when_int_outcome,.after = when_outcome) %>%
mutate(id = as.character(paste0("A",row_number())))
powerbi_sus <- sustainability %>%
#drop missing foas (we need to associate the missing ones in the mapping_foas)
filter(!is.na(foa)) %>%
group_by(country,region, theme,improvement, foa,outcome, int_outcome) %>%
summarise(when_outcome = min(period, na.rm = T),
achieved_outcome = max(achieved),
.groups = 'drop'
) %>%
select(country,theme, foa, outcome,int_outcome, when_outcome, achieved_outcome) %>%
#join with efficiency to get outcomes and int_outcomes in one page
left_join(powerbi_eff) %>%
relocate(when_int_outcome,.after = when_outcome) %>%
mutate(id = as.character(paste0("A",row_number())), .before = country)
powerbi_long <- powerbi_sus
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome))
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
relocate(c(name, value), .after = when_outcome )
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
relocate(c(name, value), .after = when_int_outcome )
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = if(name== "int_outcome", when_int_outcome, when_outcome))
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = elseif(name== "int_outcome", when_int_outcome, when_outcome))
relocate(c(when, name, value), .after = when_int_outcome ) %>%
View(powerbi_long)
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = ifelse(name== "int_outcome", when_int_outcome, when_outcome)) %>%
relocate(c(when, name, value), .after = when_int_outcome ) %>%
View(powerbi_long)
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = ifelse(name== "int_outcome", when_int_outcome, when_outcome))
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = ifelse(name== "int_outcome", when_int_outcome, when_outcome)) %>%
relocate(c(when, name, value), .after = when_int_outcome )
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = ifelse(name== "outcome", when_outcome, when_int,outcome)) %>%
relocate(c(when, name, value), .after = when_int_outcome )
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = ifelse(name== "outcome", when_outcome, when_int,outcome))
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = ifelse(name== "outcome", when_outcome, when_int))
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = ifelse(name== "outcome", when_outcome, when_int_outcome))
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = ifelse(name== "outcome", when_outcome, when_int_outcome)) %>%
relocate(c(when, name, value), .after = when_int_outcome )
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = ifelse(name== "outcome", as.character(when_outcome), as.character(when_int_outcome))) %>%
relocate(c(when, name, value), .after = when_int_outcome)
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = ifelse(name== "outcome", as.character(when_outcome), as.character(when_int_outcome))) %>%
relocate(c(when, name, value), .after = when_int_outcome) %>%
select(-when_int_outcome, -when_outcome)
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome)) %>%
mutate(when = ifelse(name== "outcome", as.character(when_outcome), as.character(when_int_outcome))) %>%
mutate(achieved = ifelse(name== "outcome", as.character(achieved_outcome), as.character(achieved_int_outcome))) %>%
relocate(c(when,achieved, name, value), .after = when_int_outcome) %>%
select(-when_int_outcome, -when_outcome)
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome),
names_to = "level") %>%
mutate(when = ifelse(level== "outcome", as.character(when_outcome), as.character(when_int_outcome))) %>%
mutate(achieved = ifelse(level== "outcome", as.character(achieved_outcome), as.character(achieved_int_outcome))) %>%
relocate(c(when,achieved, level, value), .after = when_int_outcome) %>%
select(-when_int_outcome, -when_outcome)
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome),
names_to = "level",
values_to = "indicator") %>%
mutate(when = ifelse(level== "outcome", as.character(when_outcome), as.character(when_int_outcome))) %>%
mutate(achieved = ifelse(level== "outcome", as.character(achieved_outcome), as.character(achieved_int_outcome))) %>%
relocate(c(when,achieved, level, value), .after = when_int_outcome) %>%
select(-when_int_outcome, -when_outcome)
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome),
names_to = "level",
values_to = "indicator") %>%
mutate(when = ifelse(level== "outcome", as.character(when_outcome), as.character(when_int_outcome))) %>%
mutate(achieved = ifelse(level== "outcome", as.character(achieved_outcome), as.character(achieved_int_outcome))) %>%
relocate(c(when,achieved, level, indicator), .after = when_int_outcome) %>%
select(-when_int_outcome, -when_outcome)
powerbi_long <- powerbi_sus %>%
mutate(out_id = int_outcome) %>%
pivot_longer(c(outcome, int_outcome),
names_to = "level",
values_to = "indicator") %>%
mutate(when = ifelse(level== "outcome", as.character(when_outcome), as.character(when_int_outcome))) %>%
mutate(achieved = ifelse(level== "outcome", as.character(achieved_outcome), as.character(achieved_int_outcome))) %>%
relocate(c(when,achieved, level, indicator), .after = when_int_outcome) %>%
select(-when_int_outcome, -when_outcome, - achieved_outcome, - achieved_int_outcome)
powerbi_long <- powerbi_sus %>%
pivot_longer(c(outcome, int_outcome),
names_to = "level",
values_to = "indicator") %>%
mutate(when = ifelse(level== "outcome", as.character(when_outcome), as.character(when_int_outcome))) %>%
mutate(achieved = ifelse(level== "outcome", as.character(achieved_outcome), as.character(achieved_int_outcome))) %>%
relocate(c(when,achieved, level, indicator), .after = when_int_outcome) %>%
select(-when_int_outcome, -when_outcome, - achieved_outcome, - achieved_int_outcome)
export(powerbi_sus, glue('data/11.powerbi/sustainabilitylong.csv'))
export(powerbi_sus, glue('data/11.powerbi/sustainability_long.csv'))
export(powerbi_long, glue('data/11.powerbi/sustainability_long.csv'))
powerbi_long <- powerbi_sus %>%
mutate(id_outcome = int_outcome) %>%
pivot_longer(c(outcome, int_outcome),
names_to = "level",
values_to = "indicator") %>%
mutate(when = ifelse(level== "outcome", as.character(when_outcome), as.character(when_int_outcome))) %>%
mutate(achieved = ifelse(level== "outcome", as.character(achieved_outcome), as.character(achieved_int_outcome))) %>%
relocate(c(when,achieved, level, indicator), .after = when_int_outcome) %>%
select(-when_int_outcome, -when_outcome, - achieved_outcome, - achieved_int_outcome)
export(powerbi_long, glue('data/11.powerbi/sustainability_long.csv'))
