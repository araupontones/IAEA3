t <- dictionary %>%
count(`foa_nlo2 (improvements)`, Area) %>%
count(Area)
create_plot(title = "# of FOAS in NLO2") +
theme(axis.text.x = element_blank())
t <- dictionary %>%
count(`foa_nlo2 (improvements)`, Area) %>%
count(Area) %>%
create_plot(title = "# of FOAS in NLO2") +
theme(axis.text.x = element_blank())
t <- dictionary %>%
count(`foa_nlo2 (improvements)`, Area) %>%
count(Area)
sum(t$n)
t <- dictionary %>%
count(`foa_nlo2 (improvements)`, Area) %>%
count(Area) %>%
create_plot(title = "# of FOAS in NLO2") +
theme(axis.text.x = element_blank())
library(rio)
library(ggplot2)
gmdacr::load_functions('functions/themes/')
foas <- import('data/9.lookups/foas.rds')
#All Projects
projects <- import('data/1.reference/Copy of CPs_2022_09_12.xlsx') %>%
filter(!is.na(FOACode)) %>%
count(FOACode,Area )
library(dplyr)
foas <- import('data/9.lookups/foas.rds')
#All Projects
projects <- import('data/1.reference/Copy of CPs_2022_09_12.xlsx') %>%
filter(!is.na(FOACode)) %>%
count(FOACode,Area )
dictionary <- import('data/1.reference/Copy of FOA mapping - old to new.xlsx') %>%
rename(Area = `Thematic Area`)
create_plot <- function(.data, title){
.data %>%
ggplot(aes(x = n,
y = reorder(Area,n),
label= n)) +
geom_col(fill = blue_sky) +
geom_text(hjust= 1,
color = 'white',
family = "Open Sans") +
labs(y = "",
x= title) +
theme_main() +
theme(axis.title.x = element_text(color = "black"),
axis.text = element_text(size = 12))
}
dictionary %>%
count(Area ) %>%
create_plot("# of OLD FOAs")
t <- dictionary %>%
filter(!is.na(foa_nlo1))
t <- dictionary %>%
filter(!is.na(foa_nlo1)) %>%
count(`foa_nlo1`, Area) %>%
count(Area) %>%
create_plot(title = "# of FOAS in NLO1") +
theme(axis.text.x = element_blank())
t
#How many foas in CP
t <- dictionary %>%
filter(!is.na(improvements)) %>%
count(improvements, Area) %>%
count(Area) %>%
create_plot(title = "# of FOAS in CP") +
theme(axis.text.x = element_blank())
names(dictionary)
#How many foas in CP
t <- dictionary %>%
filter(!is.na(cp_improvements)) %>%
count(cp_improvements, Area) %>%
count(Area) %>%
create_plot(title = "# of FOAS in CP") +
theme(axis.text.x = element_blank())
t
t
#How many foas in CP
t <- dictionary %>%
filter(!is.na(cp_improvements)) %>%
count(cp_improvements, Area) %>%
count(Area) %>%
create_plot(title = "# of FOAS in CP") +
theme(axis.text.x = element_blank())
t
unique(dictionary$foa_nlo1)
unique(dictionary$cp_improvements)
library(dplyr)
library(rio)
cp <- import('data/6.data-collection/4.clean/cps.rds')
names(cp)
dev_level <- cp %>%
select(theme, starts_with('dev'))
foas <-import('data/6.data-collection/4.clean/foas.rds')
names(foas)
dev_level <- foas %>%
select(theme, starts_with('dev'))
names(dev_level)
library(janitor)
tabyl(dev_level, theme)
dev_level <- foas %>%
select(theme, starts_with('dev')) %>%
mutate(theme = names_themes_2(theme))
gmdacr::load_functions('functions')
dev_level <- foas %>%
select(theme, starts_with('dev')) %>%
mutate(theme = names_themes_2(theme))
tabyl(dev_level, theme)
dev_level <- foas %>%
select(theme, starts_with('dev')) %>%
mutate(theme = names_themes_2(theme)) %>%
filter(theme == "FOOD and AGRICULTURE")
tabyl(dev_level, theme)
tabyl(dev_level, dev_200)
tabyl(dev_level, dev_2000)
library(tidyr)
names(foas)
dev_level <- foas %>%
select(theme, starts_with('dev')) %>%
mutate(theme = names_themes_2(theme)) %>%
filter(theme == "FOOD and AGRICULTURE") %>%
change_dev <- dev_level %>%
select(dev_2000, dev_2023)
dev_level <- foas %>%
select(theme, starts_with('dev')) %>%
mutate(theme = names_themes_2(theme)) %>%
filter(theme == "FOOD and AGRICULTURE")
change_dev <- dev_level %>%
select(dev_2000, dev_2023)
View(change_dev)
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(id = row_number())
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(id = row_number()) %>%
pivot_longer(-id)
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
mutate(value = susor::susor_get_stata_labels(vale))
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
mutate(value = susor::susor_get_stata_labels(value))
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(value = susor::susor_get_stata_labels(dev_2000))
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023))
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023)) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
mutate(value = susor::susor_get_stata_labels(value))
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023)) %>%
mutate(id = row_number()) %>%
pivot_longer(-id)
tabyl(change_dev, value)
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023)) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
filter(!is.na(value))
tabyl(change_dev, value)
library(stringr)
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023)) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
filter(!is.na(value)) %>%
mutate(value = case_when(str_detect(value, "EARLY") ~ "Early Stage",
str_detect(value, "OPERATIONAL" ~ "Operational"),
str_detect(value, "EXPANSION" ~ "Expansion"),
T ~ value
))
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023)) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
filter(!is.na(value)) %>%
mutate(value = case_when(str_detect(value, "EARLY") ~ "Early Stage",
str_detect(value, "OPERATIONAL") ~ "Operational",
str_detect(value, "EXPANSION") ~ "Expansion",
T ~ value
))
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023)) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
filter(!is.na(value)) %>%
mutate(value = case_when(str_detect(value, "EARLY") ~ "Early Stage",
str_detect(value, "OPERATIONAL") ~ "Operational",
str_detect(value, "EXPANSION") ~ "Expansion",
T ~ "No Capacity"
))
tabyl(change_dev, value)
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023)) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
filter(!is.na(value)) %>%
mutate(value = case_when(str_detect(value, "EARLY") ~ "Early Stage",
str_detect(value, "OPERATIONAL") ~ "Operational",
str_detect(value, "EXPANSION") ~ "Expansion",
T ~ "No Capacity"
),
value = factor(value,
levels = c("No Capacity", "Early Stage", "Operational", "Expansion"),
ordered = T
)
)
tabyl(change_dev, value)
LIBRARY(ggplot())
LIBRARY(ggplot2)
library(ggplot2)
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023)) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
filter(!is.na(value)) %>%
mutate(value = case_when(str_detect(value, "EARLY") ~ "Early Stage",
str_detect(value, "OPERATIONAL") ~ "Operational",
str_detect(value, "EXPANSION") ~ "Expansion",
T ~ "No Capacity"
),
value = factor(value,
levels = c("No Capacity", "Early Stage", "Operational", "Expansion"),
ordered = T
)
) %>%
group_by(name, value) %>%
count()
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023)) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
filter(!is.na(value)) %>%
mutate(value = case_when(str_detect(value, "EARLY") ~ "Early Stage",
str_detect(value, "OPERATIONAL") ~ "Operational",
str_detect(value, "EXPANSION") ~ "Expansion",
T ~ "No Capacity"
),
value = factor(value,
levels = c("No Capacity", "Early Stage", "Operational", "Expansion"),
ordered = T
)
) %>%
group_by(name, value) %>%
count() %>%
group_by(name) %>%
mutate(total = sum(n))
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023)) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
filter(!is.na(value)) %>%
mutate(value = case_when(str_detect(value, "EARLY") ~ "Early Stage",
str_detect(value, "OPERATIONAL") ~ "Operational",
str_detect(value, "EXPANSION") ~ "Expansion",
T ~ "No Capacity"
),
value = factor(value,
levels = c("No Capacity", "Early Stage", "Operational", "Expansion"),
ordered = T
)
) %>%
group_by(name, value) %>%
count() %>%
group_by(name) %>%
mutate(total = sum(n)) %>%
ungroup()
change_dev <- dev_level %>%
select(dev_2000, dev_2023) %>%
mutate(dev_2000 = susor::susor_get_stata_labels(dev_2000),
dev_2023 = susor::susor_get_stata_labels(dev_2023)) %>%
mutate(id = row_number()) %>%
pivot_longer(-id) %>%
filter(!is.na(value)) %>%
mutate(value = case_when(str_detect(value, "EARLY") ~ "Early Stage",
str_detect(value, "OPERATIONAL") ~ "Operational",
str_detect(value, "EXPANSION") ~ "Expansion",
T ~ "No Capacity"
),
value = factor(value,
levels = c("No Capacity", "Early Stage", "Operational", "Expansion"),
ordered = T
)
) %>%
group_by(name, value) %>%
count() %>%
group_by(name) %>%
mutate(total = sum(n)) %>%
ungroup() %>%
mutate(perc = n/total)
change_dev  %>%
ggplot(aes(x = value,
y = perc,
fill = name)) +
geom_col()
change_dev  %>%
ggplot(aes(x = value,
y = perc,
fill = name)) +
geom_col(position = position_dodge2())
change_dev  %>%
ggplot(aes(x = value,
y = perc,
fill = name)) +
geom_col(position = position_dodge2()) +
theme_main()
change_dev  %>%
ggplot(aes(x = value,
y = perc,
fill = name)) +
geom_col(position = position_dodge2()) +
scale_y_continuous(labels = function(x)scales::percent())
change_dev  %>%
ggplot(aes(x = value,
y = perc,
fill = name)) +
geom_col(position = position_dodge2()) +
scale_y_continuous(labels = function(x)scales::percent(x))
change_dev  %>%
ggplot(aes(x = value,
y = perc,
fill = name)) +
geom_col(position = position_dodge2()) +
scale_y_continuous(labels = function(x)scales::percent(x)) +
theme_main()
change_dev  %>%
ggplot(aes(x = value,
y = perc,
fill = name)) +
labs(title = "Status of development of Institutions.") +
geom_col(position = position_dodge2()) +
scale_y_continuous(labels = function(x)scales::percent(x)) +
theme_main()
dev_level %>%
select(dev_reason)
dev_level %>%
select(dev_reason) %>%
filter(!is.na(dev_reason))
dev_level %>%
select(dev_reason) %>%
filter(!is.na(dev_reason)) %>%
mutate(dev_reason = susor::susor_get_stata_labels(dev_reason))
dev_level %>%
select(dev_reason) %>%
filter(!is.na(dev_reason)) %>%
mutate(dev_reason = susor::susor_get_stata_labels(dev_reason)) %>%
count(dev_reason)
dev_level %>%
select(dev_reason) %>%
filter(!is.na(dev_reason)) %>%
mutate(dev_reason = susor::susor_get_stata_labels(dev_reason))
dev_level %>%
select(dev_reason) %>%
filter(!is.na(dev_reason)) %>%
mutate(dev_reason = susor::susor_get_stata_labels(dev_reason)) %>%
count(dev_reason)
dev_level %>%
select(dev_reason) %>%
filter(!is.na(dev_reason)) %>%
mutate(dev_reason = susor::susor_get_stata_labels(dev_reason)) %>%
count(dev_reason) %>%
ggplot(aes(x = n,
y = dev_reason)) +
geom_col()
dev_level %>%
select(dev_reason) %>%
filter(!is.na(dev_reason)) %>%
mutate(dev_reason = susor::susor_get_stata_labels(dev_reason)) %>%
count(dev_reason) %>%
ggplot(aes(x = n,
y = dev_reason)) +
geom_col() +
theme_main()
dev_level %>%
select(dev_reason) %>%
filter(!is.na(dev_reason)) %>%
mutate(dev_reason = susor::susor_get_stata_labels(dev_reason)) %>%
count(dev_reason) %>%
ggplot(aes(x = n,
y = dev_reason)) +
geom_col() +
theme_main() +
labs(title = "Reasons that best explain the shrink of the level of development")
library(ggplot2)
library(extrafont)
library(tidyr)
library(glue)
#check response rates
all_responses <- list.files('data/6.data-collection/2.response_rates', pattern = "xlsx")
all_responses
reports <- lapply(all_responses, function(x){
r <- rio::import(file.path("data/6.data-collection/2.response_rates",x)) %>%
filter(Country_name == "TOTAL") %>%
mutate(date = str_remove_all(x, "responses_by_country_|.xlsx")) %>%
select(Submitted, Accessed, date)
}) %>% do.call(rbind,.)
clean_r <- reports %>%
mutate(date = lubridate::ymd(date)) %>%
pivot_longer(-date,
names_to = "status")
responses  = max(clean_r$value[clean_r$status == 'Submitted'])
rsponses_label = prettyNum(responses, big.mark = ",")
ggplot(clean_r,
aes(x = date,
y = value,
color = status)
) +
geom_line(size = 1) +
geom_point(size = 3) +
scale_x_date(date_breaks = '1 day', date_labels = "%b %d") +
scale_color_manual(name = "",
values = c('#019BAD', '#72B62C')) +
scale_y_continuous(
breaks = seq(0,responses +500, 500),
labels = function(x)prettyNum(seq(0,responses +500, 500), big.mark = ",")) +
theme_minimal() +
labs(y = "Counterparts",
x ="",
title = "Evolution of Responses",
subtitle = glue("CP Survey: {rsponses_label} counterparts have submitted their interview."),
caption = "Data: CP Survey | November 23 2023")+
theme(
plot.title.position = 'plot',
plot.title = element_text(size = 20, face = 'bold'),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(angle = 90),
axis.title.x = element_text(margin = margin(r = 20)),
legend.text = element_text(size = 11),
legend.position = 'top',
text = element_text(family = "Open Sans")
)
# str_remove_all(all_responses, "responses_by_country_|.xlsx")
library(ggplot2)
library(extrafont)
library(tidyr)
library(glue)
#check response rates
all_responses <- list.files('data/6.data-collection/2.response_rates', pattern = "xlsx")
all_responses
reports <- lapply(all_responses, function(x){
r <- rio::import(file.path("data/6.data-collection/2.response_rates",x)) %>%
filter(Country_name == "TOTAL") %>%
mutate(date = str_remove_all(x, "responses_by_country_|.xlsx")) %>%
select(Submitted, Accessed, date)
}) %>% do.call(rbind,.)
clean_r <- reports %>%
mutate(date = lubridate::ymd(date)) %>%
pivot_longer(-date,
names_to = "status")
responses  = max(clean_r$value[clean_r$status == 'Submitted'])
rsponses_label = prettyNum(responses, big.mark = ",")
ggplot(clean_r,
aes(x = date,
y = value,
color = status)
) +
geom_line(size = 1) +
geom_point(size = 3) +
scale_x_date(date_breaks = '1 day', date_labels = "%b %d") +
scale_color_manual(name = "",
values = c('#019BAD', '#72B62C')) +
scale_y_continuous(
breaks = seq(0,responses +500, 500),
labels = function(x)prettyNum(seq(0,responses +500, 500), big.mark = ",")) +
theme_minimal() +
labs(y = "Counterparts",
x ="",
title = "Evolution of Responses",
subtitle = glue("CP Survey: {rsponses_label} counterparts have submitted their interview."),
caption = "Data: CP Survey | November 23 2023")+
theme(
plot.title.position = 'plot',
plot.title = element_text(size = 20, face = 'bold'),
plot.subtitle = element_text(size = 14),
axis.text.x = element_text(angle = 90),
axis.title.x = element_text(margin = margin(r = 20)),
legend.text = element_text(size = 11),
legend.position = 'top',
text = element_text(family = "Open Sans")
)
